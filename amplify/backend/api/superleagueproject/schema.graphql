type Suspension @model @auth(rules: [{allow: public}]) {
  id: ID!
  suspensionGameLength: Int
}

type Divisions @model @auth(rules: [{allow: public}]) {
  id: ID!
  season: ID
  division: String
  year: String
}

type Matches @model @auth(rules: [{allow: public}]) {
  id: ID!
  hometeam: String
  awayteam: String
  hometeamscore: String
  awayteamscore: String
  season: String
  division: String
  year: String
  referee: String
  gamenumber: Int
  hometeamgamenumber: Int
  awayteamgamenumber: Int
  gamedate: String
}

type Seasons @model @auth(rules: [{allow: public}]) {
  id: ID!
  season: String
  year: String
  startdate: AWSDate
  isseasonactive: Boolean
}

type Refs @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstname: String
  lastname: String
  phonenumber: String
  email: String
}

type RegisteredPlayers @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstname: String
  lastname: String
  teamname: String
  division: String
  season: String
  position: String
  captain: String
  email: String
  phonenumber: String
  instagramhandle: String
  teamid: String
  goals: String
  assists: String
  contributions: String
  totalgoals: Int
  totalassists: Int
  totalcontributions: Int
  year: String
  onRoster: Boolean
  suspendedUntilGameNumber: Int
  yellowCards: String
  redCards: String
}

type RegisteredTeams @model @auth(rules: [{allow: public}]) {
  id: ID!
  teamname: String
  season: String
  divison: String
  year: String
  gamesplayed: Int
}
 